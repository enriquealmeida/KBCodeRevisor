======OBJECT = Reorg-EALMEIDANBK_Enrique-2016-06-07T114740.File === Reorg- EALMEIDANBK_Enrique-2016-06-07 T114740=====
<Object parentGuid="00000000-0000-0000-0000-000000000000" user="EALMEIDANBK\Enrique" versionDate="0001-01-01T00:00:00.0000000" lastUpdate="2016-06-07T14:47:40.0000000Z" checksum="9c2e1ba3c481f6701b70395173832a02" fullyQualifiedName="Reorg-EALMEIDANBK_Enrique-2016-06-07T114740" guid="63faf554-1d3f-46c2-9799-e4c166979d90" name="Reorg-EALMEIDANBK_Enrique-2016-06-07T114740" type="1132ac08-290f-4fd1-bd18-64777b7329d1" description="Reorg- EALMEIDANBK_Enrique-2016-06-07 T114740">
  <Part type="9b6155f9-f286-4ed5-bd15-67672e8ea320">
    <Data><base64Binary></base64Binary></Data>
    <Properties><Property><Name>FileName</Name><Value>Reorg-EALMEIDANBK_Enrique-2016-06-07T114740.sql</Value></Property><Property><Name>FileExtension</Name><Value>.sql</Value></Property><Property><Name>IsDefault</Name><Value>False</Value></Property></Properties>
  </Part>
  <Part type="babf62c5-0111-49e9-a1c3-cc004d90900a">
    <Properties />
  </Part>
  <Properties><Property><Name>Name</Name><Value>Reorg-EALMEIDANBK_Enrique-2016-06-07T114740</Value></Property><Property><Name>IsDefault</Name><Value>False</Value></Property></Properties>
</Object>
====== PROPERTIES =======
Name -> Reorg-EALMEIDANBK_Enrique-2016-06-07T114740
IsDefault -> False
