======OBJECT = Solicitudes.Transaction === Solicitudes=====

=== RULES ===
/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */
[web]
{
parm(in:&Mode, in:&PryId, in:&PrbId);

NoAccept(PrbGravedad);
NoAccept(PrbAvance);
NoAccept(IngUsr);
NoAccept(PrbFchIng);
NoAccept(PrbAprobadoUsuario);
NoAccept(PrbAprobadoFecha);
Prompt(PromptConsolidado, PrbCnsId);
PryId = &PryId if not &PryId.IsEmpty();
noaccept(PryId) if not &PryId.IsEmpty();
PrbId = &PrbId if not &PrbId.IsEmpty();
noaccept(PrbId) if not &PrbId.IsEmpty();

SolObjId = &Insert_SolObjId if &Mode = TrnMode.Insert and not &Insert_SolObjId.IsEmpty();
noaccept(SolObjId) if &Mode = TrnMode.Insert and not &Insert_SolObjId.IsEmpty();
SolOriId = &Insert_SolOriId if &Mode = TrnMode.Insert and not &Insert_SolOriId.IsEmpty();
noaccept(SolOriId) if &Mode = TrnMode.Insert and not &Insert_SolOriId.IsEmpty();
PrbTpoCal = &Insert_PrbTpoCal if &Mode = TrnMode.Insert and not &Insert_PrbTpoCal.IsEmpty();
noaccept(PrbTpoCal) if &Mode = TrnMode.Insert and not &Insert_PrbTpoCal.IsEmpty();
PrbCnsId = &Insert_PrbCnsId if &Mode = TrnMode.Insert and not &Insert_PrbCnsId.IsEmpty();
noaccept(PrbCnsId) if &Mode = TrnMode.Insert and not &Insert_PrbCnsId.IsEmpty();
PrbPrio = &Insert_PrbPrio if &Mode = TrnMode.Insert and not &Insert_PrbPrio.IsEmpty();
noaccept(PrbPrio) if &Mode = TrnMode.Insert and not &Insert_PrbPrio.IsEmpty();
CrrUsr = &Insert_CrrUsr if &Mode = TrnMode.Insert and not &Insert_CrrUsr.IsEmpty();
noaccept(CrrUsr) if &Mode = TrnMode.Insert and not &Insert_CrrUsr.IsEmpty();
SegUsr = &Insert_SegUsr if &Mode = TrnMode.Insert and not &Insert_SegUsr.IsEmpty();
noaccept(SegUsr) if &Mode = TrnMode.Insert and not &Insert_SegUsr.IsEmpty();
PrbTpo = &Insert_PrbTpo if &Mode = TrnMode.Insert and not &Insert_PrbTpo.IsEmpty();
noaccept(PrbTpo) if &Mode = TrnMode.Insert and not &Insert_PrbTpo.IsEmpty();
PrbSts = &Insert_PrbSts if &Mode = TrnMode.Insert and not &Insert_PrbSts.IsEmpty();
noaccept(PrbSts) if &Mode = TrnMode.Insert and not &Insert_PrbSts.IsEmpty();
SisId = &Insert_SisId if &Mode = TrnMode.Insert and not &Insert_SisId.IsEmpty();
noaccept(SisId) if &Mode = TrnMode.Insert and not &Insert_SisId.IsEmpty();
}

Error('Identificador de Cliente is required.') if CliId.IsEmpty();
Error('Tipo del Problema is required.') if PrbTpo.IsEmpty();
Error('Titulo Solicitud is required.') if PrbDsc.IsEmpty();
/* Generated by DVelop Work With Plus Pattern [End] - Do not change */


Default(CrrUsr, '*NADIE');

Default(PrbPrio , Prioridad.Normal ) ;
Default(SegUsr ,upper(userid() ) ) ;
Default(PrbUsr ,upper(userid() ) ) ;
Default(PrbSts ,DMPrbSts.ING ) ;
Default(PrbTpoCal, &SolCalSinEfecto);
Default(PrbRequiereDocumentacion, true);
Default(SolOriId, &SolOriDef);

IngUsr=UPPER(Userid()) if &Mode=TrnMode.Insert;


PrbId = udp(PCNumera,'PRB' ) 
	IF &Mode = TrnMode.Insert  and  after(Confirm ) ;
PrbId = &vPrbId 
	IF &Mode = TrnMode.Update  or  &Mode = TrnMode.Delete ;

PrbFch = ServerDate()
	if PrbSts = &vCerrado and old(PrbSts) <> PrbSts and Null(PrbFch) and not CrrUsr='*NADIE';   // para que no queden solicitudes cerradas sin fecha de apertura...
CrrFch = ServerDate()
	if PrbSts = &vCerrado and old(PrbSts) <> PrbSts and Null(CrrFch) and after(confirm);

// cierro solicitud que pasa a borrado
CrrFch = ServerDate()        
	if PrbSts = &ParBorrado and old(PrbSts) <> PrbSts and null(CrrFch) 
	on AfterValidate; 
CrrUsr = upper(userid()) 
	if PrbSts = &ParBorrado and old(PrbSts) <> PrbSts 
	on AfterValidate;

Error('La fecha de apertura debe ser menor que la fecha de cierre' ) 
	IF PrbFch > CrrFch  and  after(confirm )  and  (not null(CrrFch ) ) ;

//Error('Debe existir un responsable de corregir luego que una solicitud fue abierta')if PrbSts<>&vIngresado and PrbSts<>'DES' and Null(CrrUsr);
Error('Debe existir un responsable de corregir luego que la solicitud pasa a estado ' + PrbSts)
    if PrbStsRequiereUsuario = true  and CrrUsr='*NADIE';


PrbFchIng = &Today 
	if insert 
	on AfterValidate;

// fecha de cierre modificable
Error('La fecha de cierre no puede ser anterior a la fecha de ingresado')
    if CrrFch < PrbFchIng and (PrbSts = &vCerrado or PrbSts = &ParBorrado) 
	on AfterValidate;
Error('La fecha de cierre no puede ser anterior a la fecha de apertura')
    if CrrFch < PrbFch and (PrbSts = &vCerrado or PrbSts = &ParBorrado) 
	on AfterValidate;
Error('La fecha de cierre solo se puede ingresar al cerrar la solicitud')
    if not null(CrrFch) and PrbSts <> &vCerrado and PrbSts <> &ParBorrado 
	on AfterValidate;

Error('El Titulo de la solicitud no puede estar vacio.') 
	if PrbDsc.IsEmpty();

Error('El proyecto no puede estar vacío luego que la solicitud pasa a estado ' + PrbSts)
    if null(PryId) and PrbStsRequiereUsuario = true  
	on AfterValidate;

Error('El usuario que reportó no puede estar vacío')
    if null(PrbUsr) 
	on AfterValidate;

&PryValido = udp(ExisteProyecto, PryId) 
	if not null(PryId) 
	on AfterValidate;
Error('El proyecto no es válido') 
	if &PryValido = Bool.false  and not null(PryId) 
	on AfterValidate;


[web]
{

Prompt(HsPry,PryId);
Prompt(HSConsolidado,PrbCnsId);

NoPrompt(SegUsr);
NoPrompt(CrrUsr);
NoPrompt(PrbId);

accept(&ValRspId);

noaccept(SisId)  
	if PrbSts = &vCerrado;

noaccept(PrbTpo)  
	if PrbSts = &vCerrado;
noaccept(PrbTpoCal) 
	if PrbSts = &vCerrado;

noaccept(PrbPrio) 
	if PrbSts = &vCerrado;
noaccept(PrbUsr) 
	if PrbSts = &vCerrado;
noaccept(PrbCnsId)
	if PrbSts = &vCerrado;
noaccept(CrrUsr)
	if PrbSts = &vCerrado;
noaccept(SegUsr)
	if PrbSts = &vCerrado;
noaccept(PrbHrsPln)
	if PrbSts = &vCerrado;
noaccept(PryId)
	if PrbSts = &vCerrado;
noaccept(SolOriId)
	if PrbSts = &vCerrado;

CrrFch.Enabled = 1 
	if PrbSts = &vCerrado;

}



=== EVENTS SOURCE ===

Event Start

	[WEB]
	{
	    Form.Caption='Sol:' + &PrbId.ToString().Trim()
		PFDocAsoSol.call( &PrbId, &hayDoc)	
	}
    &SolCalSinEfecto = PMTParChr('SOLCALSINE')
	&vCerrado = DMPrbSts.CER
    &ParBorrado = DMPrbSts.Bor
    &SoloriDef = PMTParChr('SOLorIDEF')

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	LoadWWPContext.Call(&WWPContext)
	
	&TrnContext.FromXml(&WebSession.Get(!"TrnContext"))
	If (&TrnContext.TransactionName = &Pgmname and &Mode = TrnMode.Insert)
		For &TrnContextAtt in &TrnContext.Attributes
			Do Case
				// When inserting with instantiated SolObjId
				Case &TrnContextAtt.AttributeName = !"SolObjId"
					&Insert_SolObjId.FromString(&TrnContextAtt.AttributeValue)
				// When inserting with instantiated SolOriId
				Case &TrnContextAtt.AttributeName = !"SolOriId"
					&Insert_SolOriId.FromString(&TrnContextAtt.AttributeValue)
				// When inserting with instantiated PrbTpoCal
				Case &TrnContextAtt.AttributeName = !"PrbTpoCal"
					&Insert_PrbTpoCal.FromString(&TrnContextAtt.AttributeValue)
				// When inserting with instantiated PrbCnsId
				Case &TrnContextAtt.AttributeName = !"PrbCnsId"
					&Insert_PrbCnsId.FromString(&TrnContextAtt.AttributeValue)
				// When inserting with instantiated PrbPrio
				Case &TrnContextAtt.AttributeName = !"PrbPrio"
					&Insert_PrbPrio.FromString(&TrnContextAtt.AttributeValue)
				// When inserting with instantiated CrrUsr
				Case &TrnContextAtt.AttributeName = !"CrrUsr"
					&Insert_CrrUsr.FromString(&TrnContextAtt.AttributeValue)
				// When inserting with instantiated SegUsr
				Case &TrnContextAtt.AttributeName = !"SegUsr"
					&Insert_SegUsr.FromString(&TrnContextAtt.AttributeValue)
				// When inserting with instantiated PrbTpo
				Case &TrnContextAtt.AttributeName = !"PrbTpo"
					&Insert_PrbTpo.FromString(&TrnContextAtt.AttributeValue)
				// When inserting with instantiated PrbSts
				Case &TrnContextAtt.AttributeName = !"PrbSts"
					&Insert_PrbSts.FromString(&TrnContextAtt.AttributeValue)
				// When inserting with instantiated SisId
				Case &TrnContextAtt.AttributeName = !"SisId"
					&Insert_SisId.FromString(&TrnContextAtt.AttributeValue)
			Endcase
		Endfor
	Endif

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndEvent

Event After Trn

    &PrbStsAux = PrbSts
	
    if &Mode=TrnMode.Insert     
		EnvioSolicitudPorMail.Call(PryId,PrbId,CrrUsrMail,&OtroEmail,&PrbUsrMail,SegUsrMail)
        PGFecEst.call(PrbId,&PrbStsAux)
    endif
	
    if PrbSts <> old(PrbSts)
        PGFecEst.call(PrbId,PrbSts)
    endif
	
    if PrbPlaFch <> Old(PrbPlaFch)
		&AuxDate = old(PrbPlaFch)
		
		&SolObsDet = 'Cambio en fecha de solicitado. Valor anterior: ' + &AuxDate.ToString() 
        &SolObsDet += '. Nuevo valor: ' + dtoc(PrbPlaFch) + '.'
        PGSolObs.call(PrbId,DMTpoObservaciones.CambioEnFechaDeSolicitud,&SolObsDet,PrbSts)
    endif
	
    if CrrFch <> old(CrrFch)
		&CrrFchOld = Old(CrrFch)
        &SolObsDet = 'Cambio en fecha de cierre. Valor anterior: ' + &CrrFchOld.ToString()
        &SolObsDet += '. Nuevo valor: ' + dtoc(CrrFch) + '.'
        PGSolObs.call(PrbId,DMTpoObservaciones.CambioEnFechaDeSolicitud,&SolObsDet,PrbSts)
    endif
	
  
	
    //Actualizo el texto de la solicitud si es de calidad
    PActualizoSolicitudesCalidad.call(PrbId)
	if &Mode=TrnMode.Insert
	   SolicitudCreada.Call(PryId,PrbId)
	endif
	
    if PrbSts = 'CER' or PrbSts=TrnMode.Insert or PrbSts='DES'
		
		&Mes = &Today.Month()
		&ano = &Today.Year()
        &TagId = &Ano.ToFormattedString() + &Mes.ToFormattedString() + 'F'
		AgregoTagMesFueraPlan(PryId, PrbId,&TagId)
	endif

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

   [web]
   {
	
	If (&Mode = TrnMode.Delete and not &TrnContext.CallerOnDelete)
		MOD_Solicitudes.WWSolicitudes.Call()
	Endif

	Return
   }

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndEvent

Event 'DoVerHoras'

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	HorasDeUnaSolicitud.Call(PryId, PrbId)

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndEvent

[web]
{

Event 'DoTags'

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	SolicitudesTags.Call(TrnMode.Update, PryId, PrbId)

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndEvent

Event 'DoEditWiki'

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	EditWiki.Call(PryId, PrbId)

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndEvent

Event 'DoTesteado'

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	MarcarSolicitudComoTesteada.Call(PryId, PrbId)

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndEvent

Event 'DoPasarleHoras'

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	ImputarHorasSolicitud.Call(PryId, PrbId)

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndEvent

}




=== STRUCTURE ===
PryId*
PrbId*
PryNom
PrbAprobadoUsuario
PrbAprobadoFecha
PrbAvance
PageId
PrbGravedad
PrbSlcFch
SolEsPublica
SolObjId
SolOriId
PrbUltObs
PrbFchIng
PrbTxtInstrucciones
PrbTxtDatBas
PrbTxtDoc
PrbTxtCam
PrbRequiereDocumentacion
PrbTpoCal
SolicitudTesteada
PrbKbId
PrbCnsDsc
PrbCnsEst
PrbCnsId
PrbHrsPorcentajeUsados
PrbHrsReal
PrbHrsPln
IngUsr
PrbDiasAbi
PrbTxt
PrbPrio
CrrFch
CrrUsrMail
CrrUsr
PrbPlaFch
SegUsrMail
SegUsr
PrbTpoDsc
PrbTpo
PrbStsRequiereUsuario
PrbStsDsc
PrbSts
PrbUsr
PrbFch
CliId
SisDsc
SisId
PrbDsc
PrbIndicadorHoras


====== PROPERTIES =======
Name -> Solicitudes
Description -> Solicitudes
idISBUSINESSCOMPONENT -> True
IsMain -> False
idISBCWEBSERVICE -> False
WEB_COMP -> No
URLAccess -> Yes
MasterPage -> Artech.Genexus.Common.CustomTypes.WebPanelReference
FIELD_TO_FIELD -> Yes
BORSTY -> 0
MAXBUT -> NO
MINBUT -> NO
S_TASK -> NO
CTRBOX -> NO
SHOW_FRM -> BEFORE
SEARCHABLE -> UMPV
SEARCH_VIEWER -> c9584656-94b6-4ccd-890f-332d11fc2c25-39
Apply:07135890-56fc-489b-b408-063722fa9f7d -> True
FolderType -> c88fffcd-b6f8-0000-8fec-00b5497e2117
FolderId -> 8
ObjectVisibility -> Public
IsDefault -> False
