======OBJECT = WWSolicitudes.WebPanel === Work With Solicitudes =====

=== RULES ===

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */



	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */




=== EVENTS SOURCE ===

Event Start

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	Grid.Rows = Page.Rows
	&PrbSts = nullvalue(&PrbSts)
	&PrbEstadoActivo = true
	&CliId = nullvalue(&CliId)
	&SolOriId = nullvalue(&SolOriId)
	&PrbTpoCal = nullvalue(&PrbTpoCal)
	Form.Caption = 'Trabajar con  Solicitudes'

	Do 'PrepareTransaction'
	Do 'LoadGridState'

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

	&PrbTpoCal.AddItem('*CA','*CALIDAD')
	
	//Se agrega valor especial de estados activos.
	//&PrbSts.AddItem('*AC', '*ACTIVOS')
	//&PrbSts = '*AC'
	
	&PrbEstadoActivo = false

EndEvent

Event Refresh

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	LoadWWPContext.Call(&WWPContext)

	Do 'SaveGridState'

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndEvent

Event Grid.Load

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	&Update.FromImage(ActionUpdate)
	&Update.TooltipText = "GXM_update"
	&Update.Link = Solicitudes.Link(TrnMode.Update, PryId, PrbId)
	&ModificarProyecto.FromImage(ActionUpdateProyecto)
	&ModificarProyecto.TooltipText = "Modificar Proyecto"
	
	&Horas.FromImage(menu_icon3)
	&Horas.TooltipText = "Ver horas de la solcitud"
	If (PrbHrsReal > 0)
		&Horas.Link = HorasDeUnaSolicitud.Link(PryId, PrbId)
		&Horas.Class = !'Image'
	Else
		&Horas.Link = ""
		&Horas.Class = !'Invisible'
	Endif
	&PasarHoras.FromImage(icono_registrar)
	&PasarHoras.TooltipText = "Ingresar horas a dicha solicitud"
	&PasarHoras.Link = ImputarHorasSolicitud.Link(PryId, PrbId)

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

	PrbDsc.Link = ViewSolicitudes.Link(PrbId,'')

EndEvent

Event 'DoModificarProyecto'

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	ModificarProyectoDeSolicitud.PopUp(PryId, PrbId)
	Refresh

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndEvent

Event 'DoInsert'

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	Solicitudes.Call(TrnMode.Insert, nullvalue(PryId), nullvalue(PrbId))

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndEvent

Event 'DoExport'

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	// Generate Excel spreadsheet and download it.
	MOD_Solicitudes.ExportWWSolicitudes.Call(&PrbSts, &PrbId, &PrbEstadoActivo, &PryId, &CliId, &SegUsr, &PrbTpo, &CrrUsr, &PrbDsc, &PrbFchIng, &PrbFchIng_To, &SolOriId, &PrbFch, &PrbFch_To, &PrbCnsId, &CrrFch, &CrrFch_To, &PrbTpoCal, &ExcelFilename, &ErrorMessage)
	If (&ExcelFilename <> "")
		Link(&ExcelFilename)
	Else
		msg(&ErrorMessage)
	Endif

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndEvent

Event 'DoExportReport'

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	// Generate PDF file.
	InNewWindow1.Target = MOD_Solicitudes.ExportReportWWSolicitudes.Link(&PrbSts, &PrbId, &PrbEstadoActivo, &PryId, &CliId, &SegUsr, &PrbTpo, &CrrUsr, &PrbDsc, &PrbFchIng, &PrbFchIng_To, &SolOriId, &PrbFch, &PrbFch_To, &PrbCnsId, &CrrFch, &CrrFch_To, &PrbTpoCal)
	InNewWindow1.Height = !'600'
	InNewWindow1.Width = !'800'
	InNewWindow1.OpenWindow()

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndEvent

Sub 'LoadGridState'

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	// Load grid state from session.
	If &Session.Get(&PgmName + !"GridState") = !""
		&GridState.FromXml(LoadGridState.Udp(&PgmName + !"GridState"))
	Else
		&GridState.FromXml(&Session.Get(&PgmName + !"GridState"))
	Endif	

	For &GridStateFilterValue in &GridState.FilterValues
		Do Case
			Case &GridStateFilterValue.Name = !"PRBSTS"
				&PrbSts.FromString(&GridStateFilterValue.Value)
			Case &GridStateFilterValue.Name = !"PRBID"
				&PrbId.FromString(&GridStateFilterValue.Value)
			Case &GridStateFilterValue.Name = !"PRBESTADOACTIVO"
				&PrbEstadoActivo.FromString(&GridStateFilterValue.Value)
			Case &GridStateFilterValue.Name = !"PRYID"
				&PryId.FromString(&GridStateFilterValue.Value)
			Case &GridStateFilterValue.Name = !"CLIID"
				&CliId.FromString(&GridStateFilterValue.Value)
			Case &GridStateFilterValue.Name = !"SEGUSR"
				&SegUsr.FromString(&GridStateFilterValue.Value)
			Case &GridStateFilterValue.Name = !"PRBTPO"
				&PrbTpo.FromString(&GridStateFilterValue.Value)
			Case &GridStateFilterValue.Name = !"CRRUSR"
				&CrrUsr.FromString(&GridStateFilterValue.Value)
			Case &GridStateFilterValue.Name = !"PRBDSC"
				&PrbDsc.FromString(&GridStateFilterValue.Value)
			Case &GridStateFilterValue.Name = !"PRBFCHING"
				&PrbFchIng.FromString(&GridStateFilterValue.Value)
				&PrbFchIng_To.FromString(&GridStateFilterValue.ValueTo)
			Case &GridStateFilterValue.Name = !"SOLORIID"
				&SolOriId.FromString(&GridStateFilterValue.Value)
			Case &GridStateFilterValue.Name = !"PRBFCH"
				&PrbFch.FromString(&GridStateFilterValue.Value)
				&PrbFch_To.FromString(&GridStateFilterValue.ValueTo)
			Case &GridStateFilterValue.Name = !"PRBCNSID"
				&PrbCnsId.FromString(&GridStateFilterValue.Value)
			Case &GridStateFilterValue.Name = !"CRRFCH"
				&CrrFch.FromString(&GridStateFilterValue.Value)
				&CrrFch_To.FromString(&GridStateFilterValue.ValueTo)
			Case &GridStateFilterValue.Name = !"PRBTPOCAL"
				&PrbTpoCal.FromString(&GridStateFilterValue.Value)
		EndCase
	EndFor

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndSub

Sub 'SaveGridState'

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	&GridState.FromXml(&Session.Get(&PgmName + !"GridState"))

	// Save grid state in session.
	&GridState.FilterValues.Clear()
	If not &PrbSts.IsEmpty()
		&GridStateFilterValue = new()
		&GridStateFilterValue.Name = !"PRBSTS"
		&GridStateFilterValue.Value = &PrbSts.ToString()
		&GridState.FilterValues.Add(&GridStateFilterValue)
	EndIf
	If not &PrbId.IsEmpty()
		&GridStateFilterValue = new()
		&GridStateFilterValue.Name = !"PRBID"
		&GridStateFilterValue.Value = &PrbId.ToString()
		&GridState.FilterValues.Add(&GridStateFilterValue)
	EndIf
	If not &PrbEstadoActivo.IsEmpty()
		&GridStateFilterValue = new()
		&GridStateFilterValue.Name = !"PRBESTADOACTIVO"
		&GridStateFilterValue.Value = &PrbEstadoActivo.ToString()
		&GridState.FilterValues.Add(&GridStateFilterValue)
	EndIf
	If not &PryId.IsEmpty()
		&GridStateFilterValue = new()
		&GridStateFilterValue.Name = !"PRYID"
		&GridStateFilterValue.Value = &PryId.ToString()
		&GridState.FilterValues.Add(&GridStateFilterValue)
	EndIf
	If not &CliId.IsEmpty()
		&GridStateFilterValue = new()
		&GridStateFilterValue.Name = !"CLIID"
		&GridStateFilterValue.Value = &CliId.ToString()
		&GridState.FilterValues.Add(&GridStateFilterValue)
	EndIf
	If not &SegUsr.IsEmpty()
		&GridStateFilterValue = new()
		&GridStateFilterValue.Name = !"SEGUSR"
		&GridStateFilterValue.Value = &SegUsr.ToString()
		&GridState.FilterValues.Add(&GridStateFilterValue)
	EndIf
	If not &PrbTpo.IsEmpty()
		&GridStateFilterValue = new()
		&GridStateFilterValue.Name = !"PRBTPO"
		&GridStateFilterValue.Value = &PrbTpo.ToString()
		&GridState.FilterValues.Add(&GridStateFilterValue)
	EndIf
	If not &CrrUsr.IsEmpty()
		&GridStateFilterValue = new()
		&GridStateFilterValue.Name = !"CRRUSR"
		&GridStateFilterValue.Value = &CrrUsr.ToString()
		&GridState.FilterValues.Add(&GridStateFilterValue)
	EndIf
	If not &PrbDsc.IsEmpty()
		&GridStateFilterValue = new()
		&GridStateFilterValue.Name = !"PRBDSC"
		&GridStateFilterValue.Value = &PrbDsc.ToString()
		&GridState.FilterValues.Add(&GridStateFilterValue)
	EndIf
	If not (&PrbFchIng.IsEmpty() AND &PrbFchIng_To.IsEmpty())
		&GridStateFilterValue = new()
		&GridStateFilterValue.Name = !"PRBFCHING"
		&GridStateFilterValue.Value = &PrbFchIng.ToString()
		&GridStateFilterValue.ValueTo = &PrbFchIng_To.ToString()
		&GridState.FilterValues.Add(&GridStateFilterValue)
	EndIf
	If not &SolOriId.IsEmpty()
		&GridStateFilterValue = new()
		&GridStateFilterValue.Name = !"SOLORIID"
		&GridStateFilterValue.Value = &SolOriId.ToString()
		&GridState.FilterValues.Add(&GridStateFilterValue)
	EndIf
	If not (&PrbFch.IsEmpty() AND &PrbFch_To.IsEmpty())
		&GridStateFilterValue = new()
		&GridStateFilterValue.Name = !"PRBFCH"
		&GridStateFilterValue.Value = &PrbFch.ToString()
		&GridStateFilterValue.ValueTo = &PrbFch_To.ToString()
		&GridState.FilterValues.Add(&GridStateFilterValue)
	EndIf
	If not &PrbCnsId.IsEmpty()
		&GridStateFilterValue = new()
		&GridStateFilterValue.Name = !"PRBCNSID"
		&GridStateFilterValue.Value = &PrbCnsId.ToString()
		&GridState.FilterValues.Add(&GridStateFilterValue)
	EndIf
	If not (&CrrFch.IsEmpty() AND &CrrFch_To.IsEmpty())
		&GridStateFilterValue = new()
		&GridStateFilterValue.Name = !"CRRFCH"
		&GridStateFilterValue.Value = &CrrFch.ToString()
		&GridStateFilterValue.ValueTo = &CrrFch_To.ToString()
		&GridState.FilterValues.Add(&GridStateFilterValue)
	EndIf
	If not &PrbTpoCal.IsEmpty()
		&GridStateFilterValue = new()
		&GridStateFilterValue.Name = !"PRBTPOCAL"
		&GridStateFilterValue.Value = &PrbTpoCal.ToString()
		&GridState.FilterValues.Add(&GridStateFilterValue)
	EndIf

	SaveGridState.Call(&PgmName + !"GridState",  &GridState.ToXml())

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndSub

Sub 'PrepareTransaction'

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	&TrnContext = new()
	&TrnContext.CallerObject = &Pgmname
	&TrnContext.CallerOnDelete = True
	&TrnContext.CallerURL = &HTTPRequest.ScriptName + !"?" + &HTTPRequest.QueryString
	&TrnContext.TransactionName = !"MOD_Solicitudes.Solicitudes"

	&Session.Set(!"TrnContext", &TrnContext.ToXml())

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndSub

Event &PrbEstadoActivo.Click

	if &PrbEstadoActivo
		&PrbSts.SetEmpty()
		&PrbSts.Class = 'AttributeGray'
		&PrbSts.Enabled = false
	else
		&PrbSts.SetEmpty()
		&PrbSts.Enabled = true
	Endif
	Grid.Refresh()

EndEvent




====== PROPERTIES =======
Name -> WWSolicitudes
Description -> Work With Solicitudes 
MasterPage -> Artech.Genexus.Common.CustomTypes.WebPanelReference
IsMain -> True
InstanceKey -> 07135890-56fc-489b-b408-063722fa9f7d-67
ElementKey -> /instance/level[1]/selection
PatternObjectId -> Selection
Apply:07135890-56fc-489b-b408-063722fa9f7d -> False
FolderType -> 07135890-56fc-489b-b408-063722fa9f7d
FolderId -> 67
IsGeneratedObject -> True
ObjectVisibility -> Public
IsDefault -> False
