======OBJECT = ExtraWWSolicitudesPlanes.WebPanel ===  Solicitudes =====

=== RULES ===

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */



	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */




=== EVENTS SOURCE ===

Event Start

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	Grid.Rows = Page.Rows
	&TagId = CurrentMonthYYYYMM()
	Form.Caption = ' Solicitudes'

	Do 'PrepareTransaction'
	Do 'LoadGridState'
	&OrderedBy.Visible = False
	If &OrderedBy < 1
		&OrderedBy = 1
	EndIf

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndEvent

Event Refresh

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	LoadWWPContext.Call(&WWPContext)

	Do 'SaveGridState'

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndEvent

Event Grid.Load

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	&Update.FromImage(ActionUpdate)
	&Update.TooltipText = "GXM_update"
	&Update.Link = Solicitudes.Link(TrnMode.Update, PryId, PrbId)
	&MarcarTesteada.FromImage(Testeada)
	&MarcarTesteada.TooltipText = "Marcar como Testeada"
	If (SolicitudTesteada= false)
		&MarcarTesteada.Class = !'Image'
	Else
		&MarcarTesteada.Class = !'Invisible'
	Endif
	PrbDsc.Link = MOD_Solicitudes.ViewSolicitudesTags.Link(PryId, PrbId, '')
	PrbHrsReal.Link = HorasDeUnaSolicitud.Link(PryId, PrbId)
	PrbAvance.Link = CambioAvanceSolicitud.Link(PryId, PrbId)

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndEvent

Event &MarcarTesteada.Click

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	MarcarSolicitudComoTesteada.Call(PryId, PrbId)

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndEvent

Event 'DoInsert'

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	Solicitudes.Call(TrnMode.Insert, nullvalue(PryId), nullvalue(PrbId))

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndEvent

Event 'DoExport'

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	// Generate Excel spreadsheet and download it.
	MOD_Solicitudes.ExportExtraWWSolicitudesPlanes.Call(&TagId, &PrbSts, &PrbEstadoActivo, &CliTpoId, &PryId, &CliId, &CrrUsr, &PrbCnsId, &OrderedBy, &ExcelFilename, &ErrorMessage)
	If (&ExcelFilename <> "")
		Link(&ExcelFilename)
	Else
		msg(&ErrorMessage)
	Endif

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndEvent

Event 'DoExportReport'

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	// Generate PDF file.
	InNewWindow1.Target = MOD_Solicitudes.ExportReportExtraWWSolicitudesPlanes.Link(&TagId, &PrbSts, &PrbEstadoActivo, &CliTpoId, &PryId, &CliId, &CrrUsr, &PrbCnsId, &OrderedBy)
	InNewWindow1.Height = !'600'
	InNewWindow1.Width = !'800'
	InNewWindow1.OpenWindow()

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndEvent

Sub 'LoadGridState'

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	// Load grid state from session.
	If &Session.Get(&PgmName + !"GridState") = !""
		&GridState.FromXml(LoadGridState.Udp(&PgmName + !"GridState"))
	Else
		&GridState.FromXml(&Session.Get(&PgmName + !"GridState"))
	Endif	

	&OrderedBy = &GridState.OrderedBy

	For &GridStateFilterValue in &GridState.FilterValues
		Do Case
			Case &GridStateFilterValue.Name = !"TAGID"
				&TagId.FromString(&GridStateFilterValue.Value)
			Case &GridStateFilterValue.Name = !"PRBSTS"
				&PrbSts.FromString(&GridStateFilterValue.Value)
			Case &GridStateFilterValue.Name = !"PRBESTADOACTIVO"
				&PrbEstadoActivo.FromString(&GridStateFilterValue.Value)
			Case &GridStateFilterValue.Name = !"CLITPOID"
				&CliTpoId.FromString(&GridStateFilterValue.Value)
			Case &GridStateFilterValue.Name = !"PRYID"
				&PryId.FromString(&GridStateFilterValue.Value)
			Case &GridStateFilterValue.Name = !"CLIID"
				&CliId.FromString(&GridStateFilterValue.Value)
			Case &GridStateFilterValue.Name = !"CRRUSR"
				&CrrUsr.FromString(&GridStateFilterValue.Value)
			Case &GridStateFilterValue.Name = !"PRBCNSID"
				&PrbCnsId.FromString(&GridStateFilterValue.Value)
		EndCase
	EndFor

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndSub

Sub 'SaveGridState'

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	&GridState.FromXml(&Session.Get(&PgmName + !"GridState"))

	// Save grid state in session.
	&GridState.OrderedBy = &OrderedBy
	&GridState.FilterValues.Clear()
	If not &TagId.IsEmpty()
		&GridStateFilterValue = new()
		&GridStateFilterValue.Name = !"TAGID"
		&GridStateFilterValue.Value = &TagId.ToString()
		&GridState.FilterValues.Add(&GridStateFilterValue)
	EndIf
	If not &PrbSts.IsEmpty()
		&GridStateFilterValue = new()
		&GridStateFilterValue.Name = !"PRBSTS"
		&GridStateFilterValue.Value = &PrbSts.ToString()
		&GridState.FilterValues.Add(&GridStateFilterValue)
	EndIf
	If not &PrbEstadoActivo.IsEmpty()
		&GridStateFilterValue = new()
		&GridStateFilterValue.Name = !"PRBESTADOACTIVO"
		&GridStateFilterValue.Value = &PrbEstadoActivo.ToString()
		&GridState.FilterValues.Add(&GridStateFilterValue)
	EndIf
	If not &CliTpoId.IsEmpty()
		&GridStateFilterValue = new()
		&GridStateFilterValue.Name = !"CLITPOID"
		&GridStateFilterValue.Value = &CliTpoId.ToString()
		&GridState.FilterValues.Add(&GridStateFilterValue)
	EndIf
	If not &PryId.IsEmpty()
		&GridStateFilterValue = new()
		&GridStateFilterValue.Name = !"PRYID"
		&GridStateFilterValue.Value = &PryId.ToString()
		&GridState.FilterValues.Add(&GridStateFilterValue)
	EndIf
	If not &CliId.IsEmpty()
		&GridStateFilterValue = new()
		&GridStateFilterValue.Name = !"CLIID"
		&GridStateFilterValue.Value = &CliId.ToString()
		&GridState.FilterValues.Add(&GridStateFilterValue)
	EndIf
	If not &CrrUsr.IsEmpty()
		&GridStateFilterValue = new()
		&GridStateFilterValue.Name = !"CRRUSR"
		&GridStateFilterValue.Value = &CrrUsr.ToString()
		&GridState.FilterValues.Add(&GridStateFilterValue)
	EndIf
	If not &PrbCnsId.IsEmpty()
		&GridStateFilterValue = new()
		&GridStateFilterValue.Name = !"PRBCNSID"
		&GridStateFilterValue.Value = &PrbCnsId.ToString()
		&GridState.FilterValues.Add(&GridStateFilterValue)
	EndIf

	SaveGridState.Call(&PgmName + !"GridState",  &GridState.ToXml())

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndSub

Sub 'PrepareTransaction'

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	&TrnContext = new()
	&TrnContext.CallerObject = &Pgmname
	&TrnContext.CallerOnDelete = True
	&TrnContext.CallerURL = &HTTPRequest.ScriptName + !"?" + &HTTPRequest.QueryString
	&TrnContext.TransactionName = !"MOD_Solicitudes.Solicitudes"

	&Session.Set(!"TrnContext", &TrnContext.ToXml())

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndSub

Event &PrbEstadoActivo.Click

	if &PrbEstadoActivo
		&PrbSts.SetEmpty()
		&PrbSts.Class = 'AttributeGray'
		&PrbSts.Enabled = false
	else
		&PrbSts.SetEmpty()
		&PrbSts.Enabled = true
	Endif
	Grid.Refresh()

EndEvent




====== PROPERTIES =======
Name -> ExtraWWSolicitudesPlanes
Description ->  Solicitudes 
MasterPage -> Artech.Genexus.Common.CustomTypes.WebPanelReference
InstanceKey -> 07135890-56fc-489b-b408-063722fa9f7d-67
ElementKey -> /instance/level[1]/extraSelection[1]
PatternObjectId -> ExtraSelection
FolderType -> 07135890-56fc-489b-b408-063722fa9f7d
FolderId -> 67
IsGeneratedObject -> True
ObjectVisibility -> Public
IsDefault -> False
