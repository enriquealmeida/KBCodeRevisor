======OBJECT = Usuario.Transaction === Usuarios y control de acceso=====

=== RULES ===
/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */
parm(in:&Mode, in:&GLUsId);

GLUsId = &GLUsId if not &GLUsId.IsEmpty();
noaccept(GLUsId) if not &GLUsId.IsEmpty();
noprompt(GLUsId);

CliId = &Insert_CliId if &Mode = TrnMode.Insert and not &Insert_CliId.IsEmpty();
noaccept(CliId) if &Mode = TrnMode.Insert and not &Insert_CliId.IsEmpty();
/* Generated by DVelop Work With Plus Pattern [End] - Do not change */
// parm(in:&GLUsId ,in:&Mode ) ;  

noprompt(GLUsId ) ;
GLUsId = &GLUsId if not insert;

//call(PGAmbDef ,GLUsId ) IF insert  and  after(trn ) ;
//GLUsId = &vUsario;
//error('No se aceptan nulos' ) IF null(GLUsId ) ;

//&duplicado = udp(PFPerDup ,GLUsId ,UsPrfId ) IF after(confirm )  and  (&Mode = TrnMode.Insert  or  &Mode = TrnMode.Update )  and  UsPrfFlg = 'S' ;
//error('No se puede grabar el Registro, el perfil ya fué definido anteriormente' ) IF after(confirm )  and  (&Mode = TrnMode.Insert  or  &Mode = TrnMode.Update )  and  UsPrfFlg = 'S'  and  &duplicado = 'S' ;

//&prfValido = udp(PFprfVal ,UsPrfId ) IF after(confirm )  and  (&Mode = TrnMode.Insert  or  &Mode = TrnMode.Update )  and  UsPrfFlg = 'N' ;
//error('No existe el Perfil asignado' ) IF after(confirm )  and  (&Mode = TrnMode.Insert  or  &Mode = TrnMode.Update )  and  UsPrfFlg = 'N'  and  (&prfValido <> 'S'  and  not null(UsPrfId ) ) ;

//error('No se permite Perfil Nulo para un usuario que es Perfil' ) IF after(confirm )  and  (&Mode = TrnMode.Insert  or  &Mode = TrnMode.Update )  and  UsPrfFlg = 'S'  and  null(UsPrfId ) ;

//&ingPerfil = Bool.False  IF after(UsPrfFlg )  and  UsPrfFlg = 'N' ;
//&ingPerfil = Bool.True  IF after(UsPrfFlg )  and  UsPrfFlg = 'S' ;
//UsPrfId = &perfil IF after(confirm )  and  UsPrfFlg = 'N'  and  null(UsPrfId ) ;
&vSubUsu = substr(GLUsId ,1 ,8 ) IF substr(GLUsId ,1 ,3 ) <> 'USR' ;
&vSubUsu = substr(GLUsId ,4 ,4 ) IF substr(GLUsId ,1 ,3 ) = 'USR' ;
//&prfOld = UsPrfId IF after(GLUsId ) ;
// Asigno/Borro permisos según nuevo perfil
//call(PSPerPrv ,GLUsId ,&prfOld ,UsPrfId ) IF after(confirm )  and  UsPrfFlg = 'N'  and  UsPrfId <> &prfOld  and  (&Mode = TrnMode.Insert  or  &Mode = TrnMode.Update ) ;

//Error('Error: no ingreso el dominio, por lo tanto la validacion de la contraseña no funcionara') if Null(GLDomId)  and  After(UsPrfId);

//Nocheck(GLDomId);
//Call(PFExDom,GLDomId,&vHayDom) if After(GLDomId);
//Error('El dominio no existe') if &vHayDom = 'N';


//Mientras no se programen las funciones de perfiles
//Noaccept( UsPrfFlg);
//Noaccept( UsPrfId);

//prompt(HSDomUs , GLDomId );


=== EVENTS SOURCE ===

Event Start

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	loadWWPContext.Call(&WWPContext)
	
	&TrnContext.FromXml(&WebSession.Get(!"TrnContext"))
	if (&TrnContext.TransactionName = &Pgmname and &Mode = TrnMode.Insert)
		For &TrnContextAtt in &TrnContext.Attributes
			do case
				// when inserting with instantiated CliId
				Case &TrnContextAtt.AttributeName = !"CliId"
					&Insert_CliId.FromString(&TrnContextAtt.AttributeValue)
			endcase
		endfor
	endif

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndEvent

Event After Trn

	/* Generated by DVelop Work With Plus Pattern [Start] - Do not change */

	if (&Mode = TrnMode.Delete and not &TrnContext.CallerOnDelete)
		GLUsuarios.WWUsuario.Call()
	endif

	Return

	/* Generated by DVelop Work With Plus Pattern [End] - Do not change */

EndEvent




=== STRUCTURE ===
GLUsId*
GLUsNbm
CliId
FechaDesdeDondePuedeCosultar


====== PROPERTIES =======
Name -> Usuario
Description -> Usuarios y control de acceso
MasterPage -> Artech.Genexus.Common.CustomTypes.WebPanelReference
Apply:07135890-56fc-489b-b408-063722fa9f7d -> True
FolderType -> c88fffcd-b6f8-0000-8fec-00b5497e2117
FolderId -> 20
IsDefault -> False
