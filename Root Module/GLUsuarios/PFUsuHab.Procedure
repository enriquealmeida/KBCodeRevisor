======OBJECT = PFUsuHab.Procedure === Usuario habilitado=====

=== RULES ===
parm(in:GLUsAmbId ,in:&vNivel ,out:&vHabil) ;


=== PROCEDURE SOURCE ===
&vNvlUsr = 0

&vHabil = Bool.False //'N'
&vCorrec =Bool.False //'N'
&vUsuario= upper(userid())

&vPedCla = false //'N'
for each // NIVHAB
where     GLUsAmbNvl = &vNivel
	&vPedCla = GLPideClave
endfor

&vCorrec=Bool.True //'S' 

if &vCorrec='S' // En el caso de que la contraseña está Ok
    &vCorrec=Bool.False //'N'
    // Ahora controlo que el usuario tenga nivel suficiente

    for each order GLUsId GLUsAmbId
    where     GLUsId = &vUsuario
        &vNvlUsr = GLUsAmbNvl  
        if GLUsAmbNvl  >= &vNivel
            &vCorrec=Bool.True //'S'
        endif
    endfor 
//    if &vCorrec='N'
//        &msg= &vUsuario + ': Acceso no autorizado en el ambiente ' + GLUsAmbId + ': usted tiene un permiso nivel ' + trim(str(&vNvlUsr)) +  ' y necesita por lo menos un nivel ' + trim(str(&vNivel))
//        msg(&msg)
//    endif
endif

if &vCorrec='S'
    &vHabil = Bool.True //'S'
else
    &vHabil = Bool.False //'N'
endif
	        
commit



====== PROPERTIES =======
Name -> PFUsuHab
Description -> Usuario habilitado
CommitOnExit -> No
FolderType -> c88fffcd-b6f8-0000-8fec-00b5497e2117
FolderId -> 20
ObjectVisibility -> Public
IsDefault -> False
