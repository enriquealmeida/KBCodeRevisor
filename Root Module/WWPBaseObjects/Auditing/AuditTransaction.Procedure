======OBJECT = AuditTransaction.Procedure === Audit Transaction=====

=== RULES ===
parm(in:&AuditingObject, in:&CallerName);


=== PROCEDURE SOURCE ===


//This is a procedure in which you has to define the behaviour of auditing after a record has
//being inserted, modified or deleted (when the transaction has auditing enabled).
//There is an example below of a way to audit the actions of record, saving them in DataBase
//(but this can be modified to do whatever you want):

//You should create a transaction with the following structure:

//Transaction:: Audit
//				* AuditId (Id) - Autonumber
//				  AuditDate (DateTime)
//				  AuditTableName (Name)
//				  AuditDescription (LongVarChar(2M))
//				  AuditShortDescription (VarChar(400))
//				  SecUserId
//				  SecUserName
//				  AuditAction (Character(3)

//Set this transaction as bussiness component

//Then uncomment the code below and define the variables:
//														&Audit:: Audit (Business Component)
//														&AuditDescription:: AuditDescription
//														&AuditShortDescription:: AuditShortDescription
//														&AuditPrimaryKey:: AuditShortDescription
//														&WWPContext:: WWPContext
//														&FirstRecord:: Boolean
//                            							&ActualMode:: Character(3)

//loadWWPContext.call(&WWPContext)
//&AuditPrimaryKey = ""
//&FirstRecord = True
//For &AuditingObjectRecordItem in &AuditingObject.Record
//
//	&Audit = new()
//	&Audit.AuditDate = now()
//	&Audit.SecUserId = &WWPContext.UserId
//	&Audit.AuditTableName = &AuditingObjectRecordItem.TableName
//	if &FirstRecord
//		&AuditShortDescription = "Record with key '"
//		&AuditDescription = "Record with key '"
//		&ActualMode = &AuditingObject.Mode
//	else
//		&AuditShortDescription = &AuditPrimaryKey
//		&AuditDescription = &AuditPrimaryKey
//		&ActualMode = &AuditingObjectRecordItem.Mode
//	endif
//	do case
//		Case &ActualMode = TrnMode.Insert
//			&Audit.AuditAction = "Insert"
//		Case &ActualMode = TrnMode.Update
//			&Audit.AuditAction = "Update"
//		Case &ActualMode = TrnMode.Delete
//			&Audit.AuditAction = "Delete"
//	endcase
//	For &AuditingObjectRecordItemAttributeItem in &AuditingObjectRecordItem.Attribute
//		
//		if (&AuditingObjectRecordItemAttributeItem.IsPartOfKey)
//			if &ActualMode = TrnMode.Insert
//				&AuditShortDescription += &AuditingObjectRecordItemAttributeItem.Description + " = " + &AuditingObjectRecordItemAttributeItem.newValue	+ " "		
//				&AuditDescription += &AuditingObjectRecordItemAttributeItem.Description + " = " + &AuditingObjectRecordItemAttributeItem.newValue	+ " "		
//			else
//				&AuditShortDescription += &AuditingObjectRecordItemAttributeItem.Description + " = " + &AuditingObjectRecordItemAttributeItem.OldValue	+ " "		
//				&AuditDescription += &AuditingObjectRecordItemAttributeItem.Description + " = " + &AuditingObjectRecordItemAttributeItem.OldValue	+ " "		
//			endif
//		endif
//		if (&AuditingObjectRecordItemAttributeItem.IsDescriptionAttribute)
//			if &ActualMode = TrnMode.Insert
//				&AuditShortDescription += "- " + &AuditingObjectRecordItemAttributeItem.Description + " = " + &AuditingObjectRecordItemAttributeItem.newValue	+ " "		
//				&AuditDescription += "- " + &AuditingObjectRecordItemAttributeItem.Description + " = " + &AuditingObjectRecordItemAttributeItem.newValue	+ " "		
//			else
//				&AuditShortDescription += "- " + &AuditingObjectRecordItemAttributeItem.Description + " = " + &AuditingObjectRecordItemAttributeItem.OldValue	+ " "		
//				&AuditDescription += "- " + &AuditingObjectRecordItemAttributeItem.Description + " = " + &AuditingObjectRecordItemAttributeItem.OldValue	+ " "		
//			endif
//		endif
//	endfor
//	
//	if &FirstRecord
//		&FirstRecord = False
//		&AuditPrimaryKey = &AuditShortDescription
//	endif
//	&AuditShortDescription += "' was "
//	&AuditDescription += "' was "
//	do case 
//		Case &ActualMode = TrnMode.Insert
//			&AuditShortDescription += "inserted"
//			&AuditDescription += "inserted." + newLine() + " Attributes:" + newLine()
//		Case &ActualMode = TrnMode.Update
//			&AuditShortDescription += "updated"
//			&AuditDescription += "updated." + newLine() + " Modified attributes:" + newLine()
//		Case &ActualMode = TrnMode.Delete
//			&AuditShortDescription += "deleted"
//			&AuditDescription += "deleted." + newLine() + " Attributes:" + newLine()
//	endcase
//	&AuditShortDescription += "."
//	
//	For &AuditingObjectRecordItemAttributeItem in &AuditingObjectRecordItem.Attribute
//		if not(&AuditingObjectRecordItemAttributeItem.IsPartOfKey) 
//			do case 
//				Case &ActualMode = TrnMode.Insert
//					if not &AuditingObjectRecordItemAttributeItem.newValue.IsEmpty()
//						&AuditDescription += &AuditingObjectRecordItemAttributeItem.Description + " = " + &AuditingObjectRecordItemAttributeItem.newValue  + newLine()
//					endif
//				Case &ActualMode = TrnMode.Update
//					if (&AuditingObjectRecordItemAttributeItem.newValue <> &AuditingObjectRecordItemAttributeItem.OldValue)
//						&AuditDescription += &AuditingObjectRecordItemAttributeItem.Description + " = " + &AuditingObjectRecordItemAttributeItem.newValue + " (Old value = " + &AuditingObjectRecordItemAttributeItem.OldValue + ")" + newLine()
//					endif
//				Case &ActualMode = TrnMode.Delete
//					if not (&AuditingObjectRecordItemAttributeItem.OldValue.IsEmpty())
//						&AuditDescription += &AuditingObjectRecordItemAttributeItem.Description + " = " + &AuditingObjectRecordItemAttributeItem.OldValue + newLine()
//					endif
//			endcase	
//		endif
//	endfor
//	&Audit.AuditDescription = &AuditDescription
//	&Audit.AuditShortDescription = &AuditShortDescription
//	&Audit.Save()
//	if &Audit.Success()
//		ommit
//	endif
//endfor

//Finally, apply WorkWithPlus Pattern to Audit, removing actions of Insert, Update and Delete
//Audit transaction cannot have Auditing enabled, because it will enter in loop
//So, make sure that property 'Enable Auditing' is False in Audit transaction


====== PROPERTIES =======
Name -> AuditTransaction
FolderType -> 00000000-0000-0000-0000-000000000008
FolderId -> 74
ObjectVisibility -> Private
IsDefault -> False
